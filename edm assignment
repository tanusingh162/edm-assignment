{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d71b139c-c519-4d1c-8269-d78ba3c0b8d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "ask 1: Data Overview\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Load the dataset\n",
    "netflix_df = pd.read_csv('netflix_customer_data.csv')\n",
    "\n",
    "# Display the first 5 rows of the dataset\n",
    "print(netflix_df.head())\n",
    "\n",
    "# Check for missing/null values in the dataset\n",
    "print(netflix_df.isnull().sum())\n",
    "\n",
    "# Check for unique values in columns\n",
    "print(netflix_df['gender'].unique())\n",
    "print(netflix_df['subscription_type'].unique())\n",
    "print(netflix_df['region'].unique())\n",
    "print(netflix_df['device'].unique())\n",
    "print(netflix_df['payment_method'].unique())\n",
    "print(netflix_df['favorite_genre'].unique())\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b810a55-819d-445c-bded-75e11d89bf0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "Task 2: Univariate Analysis\n",
    "\n",
    "# Plot the distribution of numerical variables\n",
    "numerical_columns = ['age', 'watch_hours', 'monthly_fee']\n",
    "for column in numerical_columns:\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.histplot(netflix_df[column], kde=True)\n",
    "    plt.title(f'Distribution of {column}')\n",
    "    plt.show()\n",
    "\n",
    "# Plot the distribution of churned\n",
    "plt.figure(figsize=(8, 6))\n",
    " sns.histplot(netflix_df[column], kde=True)\n",
    "    plt.title(f'Distribution of {column}')\n",
    "    plt.show()\n",
    "\n",
    "# Plot the distribution of churned\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.countplot(netflix_df['churned'])\n",
    "plt.title('Distribution of Churned')\n",
    "plt.xticks([0, 1], ['No Churn', 'Churn'])\n",
    "plt.show()\n",
    "\n",
    "# Count plots for categorical variables\n",
    "categorical_columns = ['subscription_type', 'gender', 'region', 'device', 'payment_method', 'favorite_genre']\n",
    "for column in categorical_columns:\n",
    "    plt.figure(figsize=(10, 6))\n",
    "    sns.countplot(netflix_df[column])\n",
    "    plt.title(f'Distribution of {column}')\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6664f0d6-462c-477e-8d00-a358ec5cc7f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "Task 3: Bivariate Analysis\n",
    "\n",
    "# Compare average watch_hours and monthly_fee across subscription_type\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(x='subscription_type', y='watch_hours', data=netflix_df)\n",
    "plt.title('Average Watch Hours by Subscription Type')\n",
    "plt.show()\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(x='subscription_type', y='monthly_fee', data=netflix_df)\n",
    "plt.title('Average Monthly Fee by Subscription Type')\n",
    "plt.show()\n",
    "\n",
    "# Compare average watch_hours and monthly_fee across region\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(x='region', y='watch_hours', data=netflix_df)\n",
    "plt.title('Average Watch Hours by Region')\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(x='region', y='monthly_fee', data=netflix_df)\n",
    "plt.title('Average Monthly Fee by Region')\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()\n",
    "\n",
    "# Plot average avg_watch_time_pper_day by favorite_genre\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(x='favorite_genre', y='avg_watch_time_per_day', data=netflix_df)\n",
    "plt.title('Average Watch Time per Day by Favorite Genre')\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()\n",
    "\n",
    "# Analyze churn rate based on gender, region, subscription_type, payment_method\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.countplot(x='gender', hue='churned', data=netflix_df)\n",
    "plt.title('Churn Rate by Gender')\n",
    "plt.show()\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.countplot(x='region', hue='churned', data=netflix_df)\n",
    "plt.title('Churn Rate by Region')\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.countplot(x='subscription_type', hue='churned', data=netflix_df)\n",
    "plt.title('Churn Rate by Subscription Type')\n",
    "plt.show()\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.countplot(x='payment_method', hue='churned', data=netflix_df)\n",
    "plt.title('Churn Rate by Payment Method')\n",
    "plt.xticks(rotation=90)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e8442a4-a6de-481e-818f-fc030b5bdb0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "Task 4: Correlation Analysis\n",
    "\n",
    "# Create a heatmap of correlation between numerical variables\n",
    "numerical_columns = ['age', 'watch_hours', 'last_login_days', 'monthly_fee', 'number_of_profiles', 'avg_watch_time_per_day', 'churned']\n",
    "correlation_matrix = netflix_df[numerical_columns].corr()\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', square=True)\n",
    "plt.title('Correlation Matrix')\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "568c2a56-55c7-4037-bfc7-59006bc912f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "Task 5: Insights & Recommendations\n",
    "Based on the analysis, here are 5-7 insights and recommendations:\n",
    "\n",
    "1. Customers with lower watch hours are more likely to churn: The analysis shows that customers with lower watch hours have a higher churn rate."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
